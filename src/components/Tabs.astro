---
import { Icon } from "astro-icon";
const { headings } = Astro.props;
---

<div class="tabs">
  <ul class="tabs-header flex mb-4">
    {
      headings.map((heading) => (
        <li class="flex cursor-pointer justify-center items-center flex-auto text-center w-full block uppercase text-xs md:text-base px-2 py-1 md:px-6 md:py-3 my-2 rounded-t hover:bg-colored-100 transition-colors">
          {heading.art} <Icon name={heading.icon} class="w-8 ml-2" />
        </li>
      ))
    }
  </ul>
  <ul class="tabs-content">
    <slot />
  </ul>
</div>
<script>
  function createTabs(element) {
    const header = element.querySelector(".tabs-header");
    const content = element.querySelector(".tabs-content");
    const tab_headers = [...header.children];
    const tab_contents = [...content.children];
    tab_contents.forEach((x) => x.classList.add("hidden"));
    let current_tab_index = -1;
    const tabContentClastList = ["flex", "flex-col", "md:flex-row"];

    function setTab(index) {
      if (current_tab_index > -1) {
        tab_headers[current_tab_index].classList.remove("text-colored-50", "bg-colored-500");
        tab_headers[current_tab_index].classList.add("hover:bg-colored-100");
        tab_contents[current_tab_index].classList.add("hidden");
      }
      tab_headers[index].classList.add("text-colored-50", "bg-colored-500");
      tab_headers[index].classList.remove("hover:bg-colored-100");
      tab_contents[index].classList.remove("hidden");
      current_tab_index = index;
    }

    let default_tab_index = tab_headers.findIndex((x) => {
      return [...x.classList].indexOf("default-tab") > -1;
    });

    default_tab_index = default_tab_index === -1 ? 0 : default_tab_index;
    setTab(default_tab_index);
    tab_headers.forEach((x, i) => (x.onclick = () => setTab(i)));
  }

  // Run
  [...document.querySelectorAll(".tabs")].forEach((x) => createTabs(x));
</script>
